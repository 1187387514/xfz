function NewsCategory(){}NewsCategory.prototype.run=function(){var t=this;t.listenAddCategoryEvent(),t.listenEditCategoryEvent(),t.listenDeleteCategoryEvent()},NewsCategory.prototype.listenAddCategoryEvent=function(){$("#add-btn").click(function(){xfzalert.alertOneInput({title:"添加新闻分类",placeholder:"请输入新闻分类",confirmCallback:function(t){xfzajax.post({url:"/cms/add_news_category/",data:{name:t},success:function(t){200===t.code?(console.log(t),window.location.reload()):xfzalert.close()}})}})})},NewsCategory.prototype.listenEditCategoryEvent=function(){$(".edit-btn").click(function(){var t=$(this).parent().parent(),e=t.attr("data-pk"),n=t.attr("data-name");xfzalert.alertOneInput({title:"修改分类名称",placeholder:"请输入新的分类名称",value:n,confirmCallback:function(t){xfzajax.post({url:"/cms/edit_news_category/",data:{pk:e,name:t},success:function(t){200===t.code?window.location.reload():xfzalert.close()}})}})})},NewsCategory.prototype.listenDeleteCategoryEvent=function(){$(".delete-btn").click(function(){var t=$(this).parent().parent().attr("data-pk");xfzalert.alertConfirm({title:"您确定要删除这个分类吗？",confirmCallback:function(){xfzajax.post({url:"/cms/delete_news_category/",data:{pk:t},success:function(t){200===t.code?window.location.reload():xfzalert.close()}})}})})},$(function(){(new NewsCategory).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3NfY2F0ZWdvcnkuanMiXSwibmFtZXMiOlsiTmV3c0NhdGVnb3J5IiwicHJvdG90eXBlIiwicnVuIiwic2VsZiIsInRoaXMiLCJsaXN0ZW5BZGRDYXRlZ29yeUV2ZW50IiwibGlzdGVuRWRpdENhdGVnb3J5RXZlbnQiLCJsaXN0ZW5EZWxldGVDYXRlZ29yeUV2ZW50IiwiJCIsImNsaWNrIiwieGZ6YWxlcnQiLCJhbGVydE9uZUlucHV0IiwidGl0bGUiLCJwbGFjZWhvbGRlciIsImNvbmZpcm1DYWxsYmFjayIsImlucHV0VmFsdWUiLCJ4ZnphamF4IiwicG9zdCIsInVybCIsImRhdGEiLCJuYW1lIiwic3VjY2VzcyIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCIsImNsb3NlIiwidHIiLCJwYXJlbnQiLCJwayIsImF0dHIiLCJ2YWx1ZSIsImFsZXJ0Q29uZmlybSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsZ0JBSVRBLGFBQWFDLFVBQVVDLElBQU0sV0FDekIsSUFBSUMsRUFBT0MsS0FDWEQsRUFBS0UseUJBQ0xGLEVBQUtHLDBCQUNMSCxFQUFLSSw2QkFHVFAsYUFBYUMsVUFBVUksdUJBQXlCLFdBQy9CRyxFQUFFLFlBQ1JDLE1BQU0sV0FDVEMsU0FBU0MsY0FBYyxDQUNuQkMsTUFBUSxTQUNSQyxZQUFjLFVBQ2RDLGdCQUFrQixTQUFVQyxHQUN4QkMsUUFBUUMsS0FBSyxDQUNUQyxJQUFNLDBCQUNOQyxLQUFPLENBQ0hDLEtBQU9MLEdBRVhNLFFBQVUsU0FBVUMsR0FDTSxNQUFuQkEsRUFBYSxNQUNaQyxRQUFRQyxJQUFJRixHQUNaRyxPQUFPQyxTQUFTQyxVQUVoQmpCLFNBQVNrQixpQkFTckM1QixhQUFhQyxVQUFVSyx3QkFBMEIsV0FFL0JFLEVBQUUsYUFDUkMsTUFBTSxXQUNWLElBQ0lvQixFQURhckIsRUFBRUosTUFDQzBCLFNBQVNBLFNBQ3pCQyxFQUFLRixFQUFHRyxLQUFLLFdBQ2JaLEVBQU9TLEVBQUdHLEtBQUssYUFDbkJ0QixTQUFTQyxjQUFjLENBQ25CQyxNQUFRLFNBQ1JDLFlBQWMsWUFDZG9CLE1BQVFiLEVBQ1JOLGdCQUFrQixTQUFVQyxHQUN4QkMsUUFBUUMsS0FBSyxDQUNUQyxJQUFNLDJCQUNOQyxLQUFPLENBQ0hZLEdBQUtBLEVBQ0xYLEtBQU9MLEdBRVhNLFFBQVUsU0FBVUMsR0FDSyxNQUFqQkEsRUFBYSxLQUNiRyxPQUFPQyxTQUFTQyxTQUVoQmpCLFNBQVNrQixpQkFTckM1QixhQUFhQyxVQUFVTSwwQkFBNEIsV0FFL0JDLEVBQUUsZUFDUkMsTUFBTSxXQUNaLElBRUlzQixFQUZhdkIsRUFBRUosTUFDQzBCLFNBQVNBLFNBQ2pCRSxLQUFLLFdBQ2pCdEIsU0FBU3dCLGFBQWEsQ0FDbEJ0QixNQUFRLGVBQ1JFLGdCQUFtQixXQUNmRSxRQUFRQyxLQUFLLENBQ1RDLElBQVEsNkJBQ1JDLEtBQVMsQ0FDTFksR0FBTUEsR0FFVlYsUUFBVyxTQUFVQyxHQUNJLE1BQWpCQSxFQUFhLEtBQ2JHLE9BQU9DLFNBQVNDLFNBRWhCakIsU0FBU2tCLGlCQVNyQ3BCLEVBQUUsWUFDaUIsSUFBSVIsY0FDVkUiLCJmaWxlIjoibmV3c19jYXRlZ29yeS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBOZXdzQ2F0ZWdvcnkoKSB7XHJcblxyXG59XHJcblxyXG5OZXdzQ2F0ZWdvcnkucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgIHNlbGYubGlzdGVuQWRkQ2F0ZWdvcnlFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5FZGl0Q2F0ZWdvcnlFdmVudCgpO1xyXG4gICAgc2VsZi5saXN0ZW5EZWxldGVDYXRlZ29yeUV2ZW50KCk7XHJcbn07XHJcblxyXG5OZXdzQ2F0ZWdvcnkucHJvdG90eXBlLmxpc3RlbkFkZENhdGVnb3J5RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgYWRkQnRuID0gJCgnI2FkZC1idG4nKTtcclxuICAgIGFkZEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgeGZ6YWxlcnQuYWxlcnRPbmVJbnB1dCh7XHJcbiAgICAgICAgICAgICd0aXRsZSc6J+a3u+WKoOaWsOmXu+WIhuexuycsXHJcbiAgICAgICAgICAgICdwbGFjZWhvbGRlcic6J+ivt+i+k+WFpeaWsOmXu+WIhuexuycsXHJcbiAgICAgICAgICAgICdjb25maXJtQ2FsbGJhY2snOmZ1bmN0aW9uIChpbnB1dFZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgICd1cmwnOicvY21zL2FkZF9uZXdzX2NhdGVnb3J5LycsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOntcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOmlucHV0VmFsdWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddID09PSAyMDApe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSlcclxufTtcclxuXHJcbk5ld3NDYXRlZ29yeS5wcm90b3R5cGUubGlzdGVuRWRpdENhdGVnb3J5RXZlbnQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICB2YXIgZWRpdEJ0biA9ICQoJy5lZGl0LWJ0bicpO1xyXG4gICAgZWRpdEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGN1cnJlbnRCdG4gPSAkKHRoaXMpO1xyXG4gICAgICAgIHZhciB0ciA9IGN1cnJlbnRCdG4ucGFyZW50KCkucGFyZW50KCk7XHJcbiAgICAgICAgdmFyIHBrID0gdHIuYXR0cignZGF0YS1waycpO1xyXG4gICAgICAgIHZhciBuYW1lID0gdHIuYXR0cignZGF0YS1uYW1lJyk7XHJcbiAgICAgICAgeGZ6YWxlcnQuYWxlcnRPbmVJbnB1dCh7XHJcbiAgICAgICAgICAgICd0aXRsZSc6J+S/ruaUueWIhuexu+WQjeensCcsXHJcbiAgICAgICAgICAgICdwbGFjZWhvbGRlcic6J+ivt+i+k+WFpeaWsOeahOWIhuexu+WQjeensCcsXHJcbiAgICAgICAgICAgICd2YWx1ZSc6bmFtZSxcclxuICAgICAgICAgICAgJ2NvbmZpcm1DYWxsYmFjayc6ZnVuY3Rpb24gKGlucHV0VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHhmemFqYXgucG9zdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3VybCc6Jy9jbXMvZWRpdF9uZXdzX2NhdGVnb3J5LycsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOntcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ3BrJzpwayxcclxuICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOmlucHV0VmFsdWVcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXT09PTIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeGZ6YWxlcnQuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufVxyXG5cclxuTmV3c0NhdGVnb3J5LnByb3RvdHlwZS5saXN0ZW5EZWxldGVDYXRlZ29yeUV2ZW50ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgdmFyIGRlbGV0ZUJ0biA9ICQoJy5kZWxldGUtYnRuJyk7XHJcbiAgICBkZWxldGVCdG4uY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBjdXJyZW50QnRuID0gJCh0aGlzKTtcclxuICAgICAgICB2YXIgdHIgPSBjdXJyZW50QnRuLnBhcmVudCgpLnBhcmVudCgpO1xyXG4gICAgICAgIHZhciBwayA9IHRyLmF0dHIoJ2RhdGEtcGsnKTtcclxuICAgICAgICB4ZnphbGVydC5hbGVydENvbmZpcm0oe1xyXG4gICAgICAgICAgICAndGl0bGUnOifmgqjnoa7lrpropoHliKDpmaTov5nkuKrliIbnsbvlkJfvvJ8nLFxyXG4gICAgICAgICAgICAnY29uZmlybUNhbGxiYWNrJzogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgeGZ6YWpheC5wb3N0KHtcclxuICAgICAgICAgICAgICAgICAgICAndXJsJyA6ICcvY21zL2RlbGV0ZV9uZXdzX2NhdGVnb3J5LycsXHJcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEnIDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAncGsnOiBwa1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXT09PTIwMCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeGZ6YWxlcnQuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufVxyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgY2F0ZWdvcnkgPSBuZXcgTmV3c0NhdGVnb3J5KCk7XHJcbiAgICBjYXRlZ29yeS5ydW4oKTtcclxufSk7Il19
