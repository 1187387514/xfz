function News(){}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},News.prototype.run=function(){var e=this;e.initUEditor(),e.listenUploadFileEvent(),e.listenSubmitEvent()},News.prototype.listenSubmitEvent=function(){submitBtn=$("#submit-btn"),submitBtn.click(function(e){e.preventDefault();var t=$("input[name='title']").val(),n=$("select[name='category']").val(),i=$("input[name='desc']").val(),o=$("input[name='thumbnail']").val(),s=window.ue.getContent(),a=$("#submit-btn").attr("data-news-id"),r="";r=a?"/cms/edit_news/"+a:"/cms/write_news/",xfzajax.post({url:r,data:{title:t,category:n,desc:i,thumbnail:o,content:s,pk:a},success:function(e){200===e.code&&xfzalert.alertSuccess("恭喜！新闻发表成功！",function(){window.location.reload()})}})})},News.prototype.listenUploadFileEvent=function(){var n=$("#thumbnail-btn");n.change(function(){var e=n[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenQiniuUploadFileEvent=function(){$("#thumbnail-btn").change(function(){console.log(1);var a=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){var t=e.data.token,n=(new Date).getTime()+"."+a.name.split(".").slice(-1)[0],i={useCdnDomain:!0,region:qiniu.region.z0,retryCount:6},o={fname:n,mimeType:["image/png","image/jpeg","image/gif","video/x-ms-wmv"]},s={next:function(e){var t=e.total.percent,n=t.toFixed(0)+"%";console.log(t),News.progressGroup.show();var i=$(".progress-bar");i.css({width:n}),i.text(n)},error:function(e){console.log(e.message)},complete:function(e){console.log(e),News.progressGroup.hide();var t=$(".progress-bar");t.css({width:0}),t.text("0%");var n="http://q7wpxrqgy.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(n)}};qiniu.upload(a,n,t,o,i).subscribe(s)}})})},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
