function FrontBase(){}function Auth(){var t=this;t.markWrapper=$(".mark-wrapper"),t.scrollWrapper=$(".auth-scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth_box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},Auth.prototype.showEvent=function(){this.markWrapper.show()},Auth.prototype.hideEvent=function(){this.markWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this,n=$(".close-btn"),e=$(".signin-btn"),o=$(".signup-btn");console.log(5),e.click(function(){console.log(1),t.showEvent(),t.scrollWrapper.css({left:0})}),o.click(function(){console.log(2),t.showEvent(),t.scrollWrapper.css({left:-400})}),n.click(function(){console.log(3),t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");(t=parseInt(t))<0?n.scrollWrapper.animate({left:"0"}):n.scrollWrapper.animate({left:"-400"})})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("短信验证码发送成功！"),t.smsCaptcha.unbind("click");var n=10,e=setInterval(function(){t.smsCaptcha.text(n+"s"),--n<=0&&(clearInterval(e),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent())},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var n=this,e=$(".signup-group input[name='telephone']");n.smsCaptcha.click(function(){var t=e.val();t||messageBox.showInfo("请输入手机号码"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){(t.code=200)&&n.smsSuccessEvent()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSignupEvent=function(){var f=$(".signup-group"),t=f.find(".submit-btn");console.log("f"),t.click(function(t){console.log("e"),t.preventDefault();var n=f.find("input[name='telephone']"),e=f.find("input[name='username']"),o=f.find("input[name='img_captcha']"),s=f.find("input[name='password1']"),a=f.find("input[name='password2']"),i=f.find("input[name='sms_captcha']"),r=n.val(),c=e.val(),p=o.val(),u=s.val(),l=a.val(),h=i.val();xfzajax.post({url:"/account/register/",data:{telephone:r,username:c,img_captcha:p,password1:u,password2:l,sms_captcha:h},success:function(t){200==t.code&&window.location.reload()},fail:function(t){console.log(t)}})})},Auth.prototype.listenSigninEvent=function(){var s=this,t=$(".signin-group"),n=t.find("input[name='telephone']"),e=t.find("input[name='password']"),o=t.find("input[name='remember']");t.find(".submit-btn").click(function(){telephone=n.val(),password=e.val(),remember=o.prop("checked"),xfzajax.post({url:"/account/login/",data:{telephone:telephone,password:password,remember:remember?1:0},success:function(t){if(200==t.code)s.hideEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var o=n[e][0];window.messageBox.show(o)}}},fail:function(t){console.log(t)}})})},Auth.prototype.listenImageCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha/?random="+Math.random())})},Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenSignupEvent(),t.listenImageCaptchaEvent(),t.listenSmsCaptchaEvent()},$(function(){(new Auth).run()}),$(function(){(new FrontBase).run()}),$(function(){window.template&&(window.template.defaults.imports.timeSince=function(t){var n=new Date(t),e=n.getTime(),o=((new Date).getTime()-e)/1e3;if(console.log(o),o<60)return"刚刚";if(60<=o&&o<3600)return minutes=parseInt(o/60),minutes+"分钟前";if(3600<=o&&o<86400)return hours=parseInt(o/60/60),hours+"小时前";if(86400<=o&&o<2592e3)return days=parseInt(o/60/60/24),days+"天前";var s=n.getFullYear(),a=n.getMonth(),i=n.getDay(),r=(n.getHours(),n.getMinutes());return s+"/"+a+"/"+i+" "+hours+":"+r})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
